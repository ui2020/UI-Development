                                    Hyper Links in HTML
- A is clickable text, picture or graphic that navigates the user to any location when clicked.
- Hyper Link is similar but it follows the rules of Http over internet.
- Hyper Links in HTML are classified into 2 Types
	              a) Intra Document Links
	              b) Inter Document Links
- Intra document links , will handle navigate to any location within the same page.
- Inter document links will handle navigation from one page to another or any specific URL or file.
- HyperLinks are created in HTML by using anchor elements  <a>
- Navigation in HyperLink is defined by using the attribute "href" [Virtual Path]

 Syntax:
	<a href="path"> Text / Image </a>

  path inside page	: Intra document link
  path outside page	: Inter document link

Intra document Links:
- It handles the navigation from one location to another with in the same page.
- For intra document link the "href" start with "#".

Syntax:
	<h2 id="css"> CSS Tutorial </h2>

	<a href="#css"> Goto CSS </a>

Inter Document Links:
- A hyper link that navigates the user to any another document or url.
- Anchor <a> element with "href" attribute is used for navigation.
- Navigation can be to any file
	          <a href="home.html"> Home </a>
- Navigation can be to any URL.
            <a href="http://www.amazon.in">
            Shopping
            </a>
- Navigation can be to any mail application
                  <a href="mailto:hr@nareshit.in">
	          email
	          </a>
- Navigation can be to files like Images, PDF, which can open in browser.

- Navigation can be to any file, but every file can't open in browser such as PPT, Excel, Word, Audio etc..

- If any file defined in link can't open, then the file will be downloaded on click.


FAQ's:
1. How to design a link so that the link target file will always download? i.e it will not open in browser.
A. HTML 5 have introduced a new attribute for downloading. The attribute is "download".

  Syntax:
    <a href="Images/earpods.jpg" download>
     Earpods
    </a>

2. How to remove underline for HyperLink?
A. By using Style  = text-decoration:none

     To Remove underline for all links:
      <style>
         a {
             text-decoration:none;
            }
      </style>
 
     To Remove underline for any specific:

      <a href=""  style="text-decoration:none">

3. How to change color for Hyperlink?
A. By using HTML we have body attributes
              a) alink
              b) vlink
    By using Styles we can change colors
              a:link	- normal [not visited]
              a:visited	- visited link
              a:active	- active link
  Ex:
      <style>
            a:link {
                color:black;
            }
            a:visited {
                color: green;
            }
            a:active {
                color:yellow;
            }
        </style>

4. How to open the linked file in a new Tab?
A. You can open the linked file in a new tab by using the attribute "target=_blank".

Syntax:
 <a href="tutorial.html" target="_blank">
  View Our Tutorial
 </a>

5. How to open the linked file in a new window not tab?
A. By using JavaScript  "window.open()" method in  href.

   href="javascript:window.open('fileName', 'title', 'width=0  height=0 ')
   
   Ex:
     <a href="javascript:window.open('Images/earpods.jpg', 'Earpods', 'width=300 height=300')">   Earpods </a>

Styles for Link Target
- If page is having intra document links, which are displayed in a single page, then you can use the style target to highlight the topics on link Click.
- Initial the topics are in normal state with some styles. And when they become target they acquire additional effects

Syntax:
       .containerNormal {
            some effects;
        }
       .containerNormal: target {
            change of effects;
        }

Frames:
=======
- Frames are available from HTML 4 version
- Frame will split the window into horizontal and vertical panes.
- So that in every pane, you can display and handle a document.
- You can split the window into frames by using the element "Frameset"  <frameset>
   Syntax:
         <frameset  rows=""  cols="">

         </frameset>
 
   rows = for horizontal split
   cols  = for vertical split

- Frameset contains collection of Frames which are defined by using <frame>
- Every <frame> will have 
                a) name
                b) src

  Syntax:
     <frameset rows="" cols="">
          <frame name=""  src=""> </frame>
          <frame name=""  src=""> </frame>
     </frameset>


Note: When you are designing "Frameset" the HTML page can't have "body section". 
      You can't display any content directly. 
      You have to design contents in a page and display inside <frame>.

                                  Forms in HTML
 - Form provides an UI that allows the user to interact with data or with our application.
- Form is a container with collection of controls like button, textbox, checkbox, radio, listbox etc..
- In HTML DOM
	 window
	 |_document
	    |_forms[]	--> collection
	       |_elements[]
- A form in HTML is created by using <form> element.
- Elements in the form are created by using
  <input>
  <select>
  <option>
  <optgroup>
  <textarea>
  <datalist>
  <meter>
  <progress>

The <form> Element:
 - It is a container with collection elements like buttons, textbox, checkbox, radio, listbox, dropdown list etc..
  Syntax:
	<form>
	         // elements
	</form>

Form Attributes:

Attribute	  	Description
===========================================
 id	          It defines a unique reference id for from.
 name	        It defines a reference name for form.
 class	      It defines a class name for css or for
	            reference in logic.
 method	      It specifies the request type to use in
	            order to submit the data. GET/POST
 action	      It specifies where to submit the data 
	            i.e any server side page.
 target	      It submits and opens the target in a 	
	            new tab or specified frame.
 novalidate   It will disable the form validation.


Form Methods:
- Every form is by default defined on GET method.
- A form can be defined for GET or POST methods.
- In services form can use the methods like GET, POST, PUT, DELETE, PURGE, OPTIONS etc..
- You can submit the form data to server on both GET and POST.

GET		                             	POST
============================================
- Data is appended into URL         - Data is submitted
  as QueryString.		                  into form body
			                                [message body]
- Anyone can view your data.	      - users can't view
		                                   after submit.
- It is easy to hack your data.	    - It difficult to hack
- It is not safe.		                - It is safer than GET
- Your data will be stored in	      - It is not stored in
  browser logs[history].	             browser logs.
- Anyone can bookmark data.         - It can't be bookmarked
- Data is in URL so you can't       - you can submit
  pass complex data i.e binary	       complex data.
  [images, graphics].
- Limit for data , max you can	    - No limit for data.
  submit 2048 chars in query
  string.
- It can handle only ASCII type     - Any type data
  value.
- Always use GET method to	        - Post method to
  fetch data from server not to	      submit.
  submit to server.
- The data you submit can be	      - Data can't be cached.
  cached i.e it is stored in the
  buffer for sometime. so that
  you can access and use from
  buffer. It reduces burden on  
  server.

 GET 	: for fetching the data
 POST	: for submittng the data                                 


Input Element <input> :
  -It allows the user to input any value. 
  -It can display value and allow the user to input or edit value.

Tag <input> Attributes:
1. id 	: It defines an unique reference ID.
2. name	: It defines a reference name, which can be
	        common for many elements.
3. class: It defines a class name for css or for
	        refernce in code.

Note: A form can't submit value of element if "name" is not defined.
      Hence name is mandatory to submit value.
      Always use "camelCase" for naming.
	ex:  txtAge
	       txt -  object type
                         Age - purpose 

4. value : It specifies the value you want to display in the element by default.

5. type :  It specifies the type of value that is allowed from the input element.
           You can restrict the data type of input value.

   	DataTypes for Input
	- text
	- passsword
	- color
	- date
	- datetime
	- datetime-local
	- email
	- month
	- number	
	- range
	- search
	- tel
	- time
	- url
	- week
	- file


 Syntax:
 	<input type="text">
	<input type="number">
	<input type="date">

Note: The new input types are not support on every browser, we have to depend on Jquery plug-in, widgets.

6. size  : It defines the width for input element. The default size is 20.

        	<input type="text" size="40">

7. minlength : It specifies the minimum number of chars that can be entered into input.
	             It is used for text and password type.

8. maxlength: It specifies the maximum number of characters that can be entered into input.

             Syntax:
                 <input type="text" minlength="4" maxlength="10">

9. min 	]  Used to define the numeric range for
10. max	]  input value. It can be used for number and range.

            Syntax:
            <input type="number" min="15" max="30" value="25"  name="txtAge">

11. required: It is used to define mandatory fields in a form.
              If you define required attribute then it must have a value.
              You can't submit empty / null.

       <input type="text"  required>

12. readonly : It is an attribute which is used to restrict editing of value in input element.

                 Syntax:
                   <input type="text"  value="John" readonly>

13. disabled : It is used to disable the element, so that form can't submit the disabled element value.

           <input type="text"  value="John" disabled>

FAQ: What is difference between disabled and readonly?
A.  Readonly will not allow to change but allows to submit the value.
      Disabled will not allow to change and will not allow to submit.

14. Placeholder:  It is used to display watermark text inside input element.

    Syntax:
     <input type="password"  name="txtPwd" minlength="4" maxlength="10" placeholder="Password 4 to 10 chars Only">

Note: When user inputs value the placeholder will be removed.

15. Autofocus: It sets focus into any element directly on page load.
               Focus will be only to the first element if it is defined for multiple elements.

         <input type="text"  name="txtName" autofocus>

16. list : It refers to datalist , which is displayed while user is keying-in [typing] the characters.
           It give suggestions based on the keyword typed in input.
           It requires a <datalist> with collection of <option> elements.

              Syntax:
                <input type="text"  list="terms">
                <datalist id="terms">
                <option> Term-1 </option>
                <option> Term-2 </option>
                </datalist>
17. pattern : It is used to verify the format of input value and restrict the value to a specific format.
	    Patterns are written by using a regular expression, which is a combination of meta characters and quantifiers { }.

Meta Characters		        Description
===========================================
?		                      Zero or One occurance	     
+		                      One or More occurance
* 	                    	Zero or More occurance
\		                      To define any entity 
d	                      	Only numeric allowed
w		                      Alpha numeric with _
s		                      Blank spaces allowed


Ex:
     color,  colour
     pattern="color, colour"    --> Invalid
     pattern="color || colour"  --> Invalid

    

     pattern="colou?r"

      u  - can be zero times or one time.

pattern requires meta characters and quantifiers:

Meta Character	    Description
============================================
 ?	              	Zero or One occurance of char.
 +	              	One or more occurances of char.
 *		              Zero or more occurances of char.
 \	              	for any individual character or entity.
 w		              It is an entity for word, it can be
		                aplha numeric with underscore _
 	                	[lowercase alphabet, uppercase
		                alphabet, number 0 to 9, and
		                underscore ]
  d		              It is an entity for only numeric.	[0-9]
  s	              	It is an entity for blank space.
  \^		            Expression must start with.
  $		              Expression must end with. \^[A-Z][0-9]$  
  [A-Z]		          Only uppercase allowed
  [a-z]	          	Only lowercase allowed
  [a-zA-Z] or[a-Z]	Both upper and lowercase
  [0-9]		          Only number allowed
  [a-zA-Z0-9]	      Aplha numeric allowed
  [a,d,s]	        	Only specified chars allowed
  		              [you can input any text but it
	                 	should contain only a, d & s]
  [^a,d,s]		      Excluding the 3 all others allowed.
  [a-mA-M4-9]     	Allows only the chars within specified range.
  [!@#$%&]	        Only specified special chars allowed
  \@  \.  \$ \+   	Individual special chars allowed

  (?=.*[A-Z])     	At least one uppercase letter
  (?=.*[a-z])	      At least one lowercase letter
  (?=.*[0-9])     	At least one numeric
  (?=.*[!@#$%&])	  At least one special char
   ( )	          	Defining sub expression
    .	            	Matches any single character
	                	[a.c]  abc - valid
		                [a,c]  a or c 
  
[A-Z]   --> how many allow - only 1 allowed A, or B, .. Z

Quantifier		    Description
============================================
 {n}	          	Exactly n-number of characters
 {n, m}		        Minimum-n and Maximum-m
 {n, }		        Minimum-n and Maximum-any

 n & m refers to numbers.

 {4}		          Exactly 4 chars
 {4, 10}	      	Minimum 4 and maximum 10
 {4, }		        Minimum 4 and Maximum any
 
 New Attributes introduced into HTML 5
================================
- autocomplete
- autofocus
- form
- formaction
- formenctype
- formmethod
- formnovalidate
- formtarget
- height and width
- list
- min and max
- multiple
- pattern (regExp)
- placeholder
- required
- step

Styles for Input Elements:
1. Disabled and ReadOnly
    input:read-only {

    }
    input:disabled {

    }

Form Element
Input Element
Input element attributes

         Various Types of Form Controls in HTML
         ---------------------------------------
1. Fieldset and Legend
     Fieldset is used for defining a group of elements.
     Legend is used for defining a caption for group.

Syntax:
  <fieldset>
      <legend> Title </legend>
      .... your controls ....
  </fieldset>
  
  2. Radio Buttons  [input type="radio"]
   - Radio button are used for providing choice
   - User can choose one or multiple.

Syntax:
  <input type="radio"> Text

   - Radio Button once checked can't be unchecked.
   - In order to uncheck the radios you have to implement "Mutex" mechanism or restart the process.
   - Mutex is "Mutual Exclusion".
   - Mutex is a multi threading mechanism that allow only one task in the process, that belongs to thread.
   - On single thread multiple tasks are defined and only task can be used.
   - This allows user to select only one option from a group of choices. [only when mutex is working]
   - If selection is mandatory but user can choose only one option from a group of choices then you can use "Radio" button.
   - You can make selection mandatory by using "checked" attribute.
   - You can define Mutex mechanism by specifying a common name for all radios in a group.

 Syntax:
  <input type="radio" name="pay" checked> Text
  <input type="radio" name="pay"> Text

  - Radios by default submit "ON" as value.
  - You can submit any value by defining "value" attribute.

 Syntax:
   <input type="radio" name="pay" value="UPI" checked> Text

Attribute:
1. id
2. name
3. class
4. value
5. checked

3. CheckBox Element
    - It is similar to radio button , but allows to check and uncheck the option.
    - You can use checkbox for selecting one or multiple options from a group of choices.

Attribute:
1. id
2. name
3. class
4. value
5. checked

Syntax:
 <input type="checkbox" name="" value="" checked> Text
 
 Style for Checked Property:
   The style ":checked " is used to define effects when checkbox is checked.

- Form
- Input
- Radios
- CheckBox

	       DropDownList
- It provides a list of options and allows the user to select any one option from list.
- In a single line it can display multiple options.
- DropDownList is designed by using 
	<select> 
   It comprises of attributes like: id , name, class, size, multiple.

- The items in dropdown list are designed by using
	<option>
   Every option can be defined with following attributes:
           Attribute		Description
           -------------------------------------
           Text			The text to display in UI
           Value		The value to submit
           Disabled		To disable the option so that
		 		it can't be selected.
           Selected		To select the option be default
				on page load.

 Syntax:
    <select>
    <option value="" disabled  selected> Text </option>
    </select>


- The items in dropdown list can be grouped by using <optgroup>
   The title for group is defined by using the attribute "Label"

Syntax:
<select name="lst">
<optgroup label="Title"> 
 <option value="" disabled> Text </option>
 <option value="" selected> Text </option>
</select>

 ListBox
- It is similar to DropDownList
- It can display multiple items on screen with a scrollbar.
- It allows the user to select or multiple options.
- A listbox is also designed by using
	<select>
  but it requires an attriubte  : size or multiple

   Size	: It converts into listbox but user select
	  only one option.
   Multiple : It converts into listbox where user can
	  select one or multiple options.

			 Progress
- It is used to show the status of any task performed inside the page, like installing, downloading, copying, uploading etc..
- You control progress by using attributes
	a) Id
	b) Name
	c) Class
	d) Min
	e) Max
	f) Value

		  Meter
- It is used to display the grade meter.
- Attributes similar to progress
	a) id
	b) class
	c) name
	d) min
	e) max
	f) value
	g) low
	i)  high

- Less gap between low and high  : red
- More gap between low and high : yellow
- Low and high are zero	     : green

		Buttons in HTML
- Buttons are used to confirm user actions.
- Buttons are uses in
	record actions [insert, create, update etc..]
	record navigation[previous, next, first ..]
	miscelaneous [submit, reset, ok, cancel, 
		         print etc.. ]
- In HTML buttons are classified into 2 types
	a) Generic Buttons
	b) Non-Generic Buttons

- Generic Buttons are the buttons with predefined functionality.
	<input type="submit">
	<input type="reset">
 
 Submit  : Is a button that can submit the form.
 Reset   : Is a button that will reset the form.

- Non-Generic Buttons are the buttons without and pre-defined functionality.
	They are ordinary buttons. You have to define functionality manually.

	<input type="button">

Attribute:
1. id
2. name
3. class
4. value

HTML 5 <button> Element, which can be used for both generic and non-generic. The "type" attribute can configure  the button as:
	type=submit	] Generic	
	type=reset	]
	type=button	]  Non-Generic

New Attributes for Button element
1. formmethod   : It specifies the request type i.e
	             GET or POST to use on submit click
2. formaction   : It specifies the target page where
	            the data to be submitted i.e any
	            server side page.
3. formtarget   : It specifies where to open the
	            target i.e in a new window or in
	            the same window.
	            new tab: _blank.

4. formnovalidate : It specifies validation on submit
	            to enable or disable.


	<input type="submit"  formaction=""  formmethod="" formnovalidate=""  formtarget="">

	<button type="submit" formaction=""  formmethod="" formnovalidate=""  formtarget=""> </button>

Label Element: It is just a container used to display labels and captions for form elements in HTML.
		YOu can bind the label with form element.
		You can bind any HTML element to Label by using "for" attribute.

	      <label for="elementName"> Text </label>
	      <label for="txtName">Name</label>

HTML 5 New Elements

The <output>  Element: 
===================
It is new HTML element used to display the result of any expression. It evaluates and reutrns result based on form input.
	It requires an form event "oninput" , which is used to perform functionality on input.

 			HTML Tables
- A table can organize information into rows and columns.
- Tables are required for presenting data and provide an UI to interact with data like : filtering, sorting etc..
- To create and configure tables in HTML we can use the following elements.

Element			Description
============================================
<table>		It is a collection of rows and cols
<caption>	It is to define a caption for table
<colgroup>	Groups the columns to define
		effects.
<thead>		It specifies the header
<tbody>		It specifies the body
<tfoot>		It specifies the footer
<th>		It specifies table header cell
<tr>		It specifies table row
<td>		It specifies the table data [cell]

         Tables in HTML
<table>
<caption>
<thead>
<tbody>
<tfoot>
<tr>
<td>
<th>
<colgroup>

Table Attributes:
1. Border, Frame, Rules

    Attribute		Description
   =======================================
   Frame		It sets a frame for table, which
			can use values box, void, rhs, lhs, above and below.

  Rules			Defined for rows and cols.
			all, none, groups, rows, cols

  Border		Defined for cell. It can contain
			only 0 or 1.
			0 [false] - no border
			1 [true]  - border.

   Frame is set for Table
   Rules set for Rows and Columns
   Border set for Cells 
   [All are defined in <table> element]

   Note: Rules and Border both can't be used. If you apply both to table only rules will be displayed.
   	You should remove rules attribute to use border.

		Syntax:
		     <table border="1" frame="void">
		     <table border="1" frame="box">
		     <table border="0" frame="box">
		     <table rules="groups" frame="box">
		     <table rules="all" frame="void">
    
2. Cellspacing and Cellpadding

    Attribute		Description
   ===================================
    cellspacing		It is distance between cells
    cellpadding		It is distance between cell border
			and content inside.

		Syntax:
		  <table cellspacing="10" cellpadding="5">

3. Align and Valign

  Attribute		Description
===========================================
    align		It aligns the content horizontally
			left, center or right.
			you can define for table, group,
			tr, th, td.

    valign		It aligns the content vertically
			top, center, bottom.
			you can define for group, tr,
			th, td.

		Syntax:
		 <table align="center">
		 <thead align="center" valign="top">
		 <tr align="right" valign="bottom">

4. bgcolor and background

   Attribute		Background
  =======================================
   bgcolor		Sets a background color for
			table, group, tr, th, td.

   background		Sets a background picture
			for table, group, tr, th, td.

		Syntax:
		   <table background="../Images/back.png">
		   <table bgcolor="yellow">
		   <thead bgcolor="yellow">

Note : If you set background image, then background color will not be displayed.

5. Merging Row and Columns in Table

Attributes		Description
=====================================
 rowspan		It merges specified number of
			rows into single row. It can be	
			defined for <td> element.

 colspan		It merges specified number of
			columns into single cell [column]
			It is defined for <td> or <th>

Note: Rowspan will work only within the group.
          Colspan can be applied to all columns.

6. Height and Width
     Height is used to define height of row in specified pixels. you can define for row or table.
     Width is used to define width for column , you can define for <td> or <th> 


Marquee
- It is used for scrolling and sliding content in a page.
- The <marquee> Tag is used for scrolling content.

Attribute		Description
===========================================
Direction	        It specifies the scrolling direction
	        	left, right, up and down.
			<marquee direction="left">

Scrollamout   		It controls the marquee scrolling speed.
	       		from 1 to 100.
	        	<marquee scrollamount="30">

bgcolor	       		It sets background color for marquee area
	        	<marquee bgcolor="yellow">

loop	        	It specifies how many times marquee
	        	have to scroll after page load.
	         	<marquee loop="3">

behavior="alternate"    It changes from scrolling to
		    	sliding in alternate direction.


You stop or start marquee dynamically using JavaScript:
- start()
- stop()
 <marquee onmouseover="this.stop()"  onmouseout="this.start()">

